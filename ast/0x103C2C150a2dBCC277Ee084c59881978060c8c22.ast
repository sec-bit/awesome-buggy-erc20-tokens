{
  "type": "SourceUnit",
  "children": [
    {
      "type": "PragmaDirective",
      "name": "solidity",
      "value": "^0.4.17"
    },
    {
      "type": "ContractDefinition",
      "name": "SafeMath",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "sub",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "a",
              "identifier": {
                "type": "Identifier",
                "name": "a"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "b",
              "identifier": {
                "type": "Identifier",
                "name": "b"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "<=",
                      "left": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "a"
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "pure"
        },
        {
          "type": "FunctionDefinition",
          "name": "add",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "a",
              "identifier": {
                "type": "Identifier",
                "name": "a"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "b",
              "identifier": {
                "type": "Identifier",
                "name": "b"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "c",
                    "identifier": {
                      "type": "Identifier",
                      "name": "c"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "a"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "Identifier",
                        "name": "c"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "a"
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "c"
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "pure"
        }
      ],
      "kind": "library"
    },
    {
      "type": "ContractDefinition",
      "name": "ERC20Basic",
      "baseContracts": [],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "totalSupply",
              "identifier": {
                "type": "Identifier",
                "name": "totalSupply"
              },
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "owner",
              "identifier": {
                "type": "Identifier",
                "name": "owner"
              },
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "animator",
              "identifier": {
                "type": "Identifier",
                "name": "animator"
              },
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": null
        },
        {
          "type": "FunctionDefinition",
          "name": "balanceOf",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "who",
              "identifier": {
                "type": "Identifier",
                "name": "who"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": null,
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "transfer",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "to",
              "identifier": {
                "type": "Identifier",
                "name": "to"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "value",
              "identifier": {
                "type": "Identifier",
                "name": "value"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": null,
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "EventDefinition",
          "name": "Transfer",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "from",
              "identifier": {
                "type": "Identifier",
                "name": "from"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "to",
              "identifier": {
                "type": "Identifier",
                "name": "to"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "value",
              "identifier": {
                "type": "Identifier",
                "name": "value"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            }
          ],
          "isAnonymous": false
        },
        {
          "type": "FunctionDefinition",
          "name": "commitDividend",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "who",
              "identifier": {
                "type": "Identifier",
                "name": "who"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": null,
          "visibility": "internal",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "ERC20",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "ERC20Basic"
          },
          "arguments": []
        }
      ],
      "subNodes": [
        {
          "type": "FunctionDefinition",
          "name": "allowance",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "owner",
              "identifier": {
                "type": "Identifier",
                "name": "owner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "spender",
              "identifier": {
                "type": "Identifier",
                "name": "spender"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": null,
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "transferFrom",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "from",
              "identifier": {
                "type": "Identifier",
                "name": "from"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "to",
              "identifier": {
                "type": "Identifier",
                "name": "to"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "value",
              "identifier": {
                "type": "Identifier",
                "name": "value"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": null,
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "approve",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "spender",
              "identifier": {
                "type": "Identifier",
                "name": "spender"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "value",
              "identifier": {
                "type": "Identifier",
                "name": "value"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": null,
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "EventDefinition",
          "name": "Approval",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "owner",
              "identifier": {
                "type": "Identifier",
                "name": "owner"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "spender",
              "identifier": {
                "type": "Identifier",
                "name": "spender"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "value",
              "identifier": {
                "type": "Identifier",
                "name": "value"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            }
          ],
          "isAnonymous": false
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "BasicToken",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "ERC20Basic"
          },
          "arguments": []
        }
      ],
      "subNodes": [
        {
          "type": "UsingForDeclaration",
          "typeName": {
            "type": "ElementaryTypeName",
            "name": "uint",
            "stateMutability": null
          },
          "libraryName": "SafeMath"
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                },
                "valueType": {
                  "type": "ElementaryTypeName",
                  "name": "uint",
                  "stateMutability": null
                }
              },
              "name": "balances",
              "identifier": {
                "type": "Identifier",
                "name": "balances"
              },
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": null
        },
        {
          "type": "ModifierDefinition",
          "name": "onlyPayloadSize",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "size",
              "identifier": {
                "type": "Identifier",
                "name": "size"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "memberName": "data"
                        },
                        "memberName": "length"
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "Identifier",
                          "name": "size"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "4",
                          "subdenomination": null
                        }
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_"
                }
              }
            ]
          },
          "isVirtual": false,
          "override": null
        },
        {
          "type": "FunctionDefinition",
          "name": "transfer",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_to",
              "identifier": {
                "type": "Identifier",
                "name": "_to"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_value",
              "identifier": {
                "type": "Identifier",
                "name": "_value"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "commitDividend"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "balances"
                    },
                    "index": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "balances"
                        },
                        "index": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "memberName": "sender"
                        }
                      },
                      "memberName": "sub"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_value"
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "_to"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "TypeNameExpression",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "address",
                        "stateMutability": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "this"
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "commitDividend"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "owner"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "balances"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "owner"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "balances"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "owner"
                              }
                            },
                            "memberName": "add"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "_value"
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "Transfer"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          },
                          {
                            "type": "Identifier",
                            "name": "owner"
                          },
                          {
                            "type": "Identifier",
                            "name": "_value"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ]
                },
                "falseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "commitDividend"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "_to"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "balances"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "_to"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "IndexAccess",
                              "base": {
                                "type": "Identifier",
                                "name": "balances"
                              },
                              "index": {
                                "type": "Identifier",
                                "name": "_to"
                              }
                            },
                            "memberName": "add"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "_value"
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "Transfer"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          },
                          {
                            "type": "Identifier",
                            "name": "_to"
                          },
                          {
                            "type": "Identifier",
                            "name": "_value"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyPayloadSize",
              "arguments": [
                {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "32",
                    "subdenomination": null
                  }
                }
              ]
            }
          ],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "balanceOf",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_owner",
              "identifier": {
                "type": "Identifier",
                "name": "_owner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "balance",
              "identifier": {
                "type": "Identifier",
                "name": "balance"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "balances"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "_owner"
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "StandardToken",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "BasicToken"
          },
          "arguments": []
        },
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "ERC20"
          },
          "arguments": []
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                },
                "valueType": {
                  "type": "Mapping",
                  "keyType": {
                    "type": "ElementaryTypeName",
                    "name": "address",
                    "stateMutability": null
                  },
                  "valueType": {
                    "type": "ElementaryTypeName",
                    "name": "uint",
                    "stateMutability": null
                  }
                }
              },
              "name": "allowed",
              "identifier": {
                "type": "Identifier",
                "name": "allowed"
              },
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": null
        },
        {
          "type": "FunctionDefinition",
          "name": "transferFrom",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_from",
              "identifier": {
                "type": "Identifier",
                "name": "_from"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_to",
              "identifier": {
                "type": "Identifier",
                "name": "_to"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_value",
              "identifier": {
                "type": "Identifier",
                "name": "_value"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "var",
                      "stateMutability": null
                    },
                    "name": "_allowance",
                    "identifier": {
                      "type": "Identifier",
                      "name": "_allowance"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "allowed"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "_from"
                    }
                  },
                  "index": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "sender"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "commitDividend"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_from"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "commitDividend"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_to"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "allowed"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "_from"
                      }
                    },
                    "index": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "_allowance"
                      },
                      "memberName": "sub"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_value"
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "balances"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "_from"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "balances"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "_from"
                        }
                      },
                      "memberName": "sub"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_value"
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "balances"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "_to"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "balances"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "_to"
                        }
                      },
                      "memberName": "add"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_value"
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "Transfer"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_from"
                    },
                    {
                      "type": "Identifier",
                      "name": "_to"
                    },
                    {
                      "type": "Identifier",
                      "name": "_value"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyPayloadSize",
              "arguments": [
                {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "32",
                    "subdenomination": null
                  }
                }
              ]
            }
          ],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "approve",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_spender",
              "identifier": {
                "type": "Identifier",
                "name": "_spender"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_value",
              "identifier": {
                "type": "Identifier",
                "name": "_value"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "UnaryOperation",
                      "operator": "!",
                      "subExpression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "&&",
                            "left": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "!=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "_value"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "isArray": false
                            },
                            "right": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "!=",
                                  "left": {
                                    "type": "IndexAccess",
                                    "base": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "allowed"
                                      },
                                      "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "msg"
                                        },
                                        "memberName": "sender"
                                      }
                                    },
                                    "index": {
                                      "type": "Identifier",
                                      "name": "_spender"
                                    }
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "isArray": false
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "isPrefix": true
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "allowed"
                      },
                      "index": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      }
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "_spender"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_value"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "Approval"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    },
                    {
                      "type": "Identifier",
                      "name": "_spender"
                    },
                    {
                      "type": "Identifier",
                      "name": "_value"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "allowance",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_owner",
              "identifier": {
                "type": "Identifier",
                "name": "_owner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_spender",
              "identifier": {
                "type": "Identifier",
                "name": "_spender"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "remaining",
              "identifier": {
                "type": "Identifier",
                "name": "remaining"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "allowed"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "_owner"
                    }
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "_spender"
                  }
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        }
      ],
      "kind": "contract"
    },
    {
      "type": "ContractDefinition",
      "name": "SmartBillions",
      "baseContracts": [
        {
          "type": "InheritanceSpecifier",
          "baseName": {
            "type": "UserDefinedTypeName",
            "namePath": "StandardToken"
          },
          "arguments": []
        }
      ],
      "subNodes": [
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string",
                "stateMutability": null
              },
              "name": "name",
              "identifier": {
                "type": "Identifier",
                "name": "name"
              },
              "expression": {
                "type": "StringLiteral",
                "value": "SmartBillions Token",
                "parts": [
                  "SmartBillions Token"
                ],
                "isUnicode": [
                  false
                ]
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "StringLiteral",
            "value": "SmartBillions Token",
            "parts": [
              "SmartBillions Token"
            ],
            "isUnicode": [
              false
            ]
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "string",
                "stateMutability": null
              },
              "name": "symbol",
              "identifier": {
                "type": "Identifier",
                "name": "symbol"
              },
              "expression": {
                "type": "StringLiteral",
                "value": "PLAY",
                "parts": [
                  "PLAY"
                ],
                "isUnicode": [
                  false
                ]
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "StringLiteral",
            "value": "PLAY",
            "parts": [
              "PLAY"
            ],
            "isUnicode": [
              false
            ]
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "decimals",
              "identifier": {
                "type": "Identifier",
                "name": "decimals"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StructDefinition",
          "name": "Wallet",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint208",
                "stateMutability": null
              },
              "name": "balance",
              "identifier": {
                "type": "Identifier",
                "name": "balance"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint16",
                "stateMutability": null
              },
              "name": "lastDividendPeriod",
              "identifier": {
                "type": "Identifier",
                "name": "lastDividendPeriod"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint32",
                "stateMutability": null
              },
              "name": "nextWithdrawBlock",
              "identifier": {
                "type": "Identifier",
                "name": "nextWithdrawBlock"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ]
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                },
                "valueType": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Wallet"
                }
              },
              "name": "wallets",
              "identifier": {
                "type": "Identifier",
                "name": "wallets"
              },
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": null
        },
        {
          "type": "StructDefinition",
          "name": "Bet",
          "members": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint192",
                "stateMutability": null
              },
              "name": "value",
              "identifier": {
                "type": "Identifier",
                "name": "value"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint32",
                "stateMutability": null
              },
              "name": "betHash",
              "identifier": {
                "type": "Identifier",
                "name": "betHash"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint32",
                "stateMutability": null
              },
              "name": "blockNum",
              "identifier": {
                "type": "Identifier",
                "name": "blockNum"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ]
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "Mapping",
                "keyType": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                },
                "valueType": {
                  "type": "UserDefinedTypeName",
                  "namePath": "Bet"
                }
              },
              "name": "bets",
              "identifier": {
                "type": "Identifier",
                "name": "bets"
              },
              "expression": null,
              "visibility": "default",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "walletBalance",
              "identifier": {
                "type": "Identifier",
                "name": "walletBalance"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "investStart",
              "identifier": {
                "type": "Identifier",
                "name": "investStart"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "investBalance",
              "identifier": {
                "type": "Identifier",
                "name": "investBalance"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "investBalanceGot",
              "identifier": {
                "type": "Identifier",
                "name": "investBalanceGot"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "investBalanceMax",
              "identifier": {
                "type": "Identifier",
                "name": "investBalanceMax"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "200000",
                "subdenomination": "ether"
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "200000",
            "subdenomination": "ether"
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "dividendPeriod",
              "identifier": {
                "type": "Identifier",
                "name": "dividendPeriod"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint",
                  "stateMutability": null
                },
                "length": null
              },
              "name": "dividends",
              "identifier": {
                "type": "Identifier",
                "name": "dividends"
              },
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "maxWin",
              "identifier": {
                "type": "Identifier",
                "name": "maxWin"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "hashFirst",
              "identifier": {
                "type": "Identifier",
                "name": "hashFirst"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "hashLast",
              "identifier": {
                "type": "Identifier",
                "name": "hashLast"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "hashNext",
              "identifier": {
                "type": "Identifier",
                "name": "hashNext"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "hashBetSum",
              "identifier": {
                "type": "Identifier",
                "name": "hashBetSum"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "hashBetMax",
              "identifier": {
                "type": "Identifier",
                "name": "hashBetMax"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "5",
                "subdenomination": "ether"
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "5",
            "subdenomination": "ether"
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint",
                  "stateMutability": null
                },
                "length": null
              },
              "name": "hashes",
              "identifier": {
                "type": "Identifier",
                "name": "hashes"
              },
              "expression": null,
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": null
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "hashesSize",
              "identifier": {
                "type": "Identifier",
                "name": "hashesSize"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "16384",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": true,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "16384",
            "subdenomination": null
          }
        },
        {
          "type": "StateVariableDeclaration",
          "variables": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "coldStoreLast",
              "identifier": {
                "type": "Identifier",
                "name": "coldStoreLast"
              },
              "expression": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
              },
              "visibility": "public",
              "isStateVar": true,
              "isDeclaredConst": false,
              "isIndexed": false,
              "isImmutable": false,
              "override": null,
              "storageLocation": null
            }
          ],
          "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
          }
        },
        {
          "type": "EventDefinition",
          "name": "LogBet",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "player",
              "identifier": {
                "type": "Identifier",
                "name": "player"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "bethash",
              "identifier": {
                "type": "Identifier",
                "name": "bethash"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "blocknumber",
              "identifier": {
                "type": "Identifier",
                "name": "blocknumber"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "betsize",
              "identifier": {
                "type": "Identifier",
                "name": "betsize"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            }
          ],
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "LogLoss",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "player",
              "identifier": {
                "type": "Identifier",
                "name": "player"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "bethash",
              "identifier": {
                "type": "Identifier",
                "name": "bethash"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "hash",
              "identifier": {
                "type": "Identifier",
                "name": "hash"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            }
          ],
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "LogWin",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "player",
              "identifier": {
                "type": "Identifier",
                "name": "player"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "bethash",
              "identifier": {
                "type": "Identifier",
                "name": "bethash"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "hash",
              "identifier": {
                "type": "Identifier",
                "name": "hash"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "prize",
              "identifier": {
                "type": "Identifier",
                "name": "prize"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            }
          ],
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "LogInvestment",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "investor",
              "identifier": {
                "type": "Identifier",
                "name": "investor"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "partner",
              "identifier": {
                "type": "Identifier",
                "name": "partner"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "amount",
              "identifier": {
                "type": "Identifier",
                "name": "amount"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            }
          ],
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "LogRecordWin",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "player",
              "identifier": {
                "type": "Identifier",
                "name": "player"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "amount",
              "identifier": {
                "type": "Identifier",
                "name": "amount"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            }
          ],
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "LogLate",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "player",
              "identifier": {
                "type": "Identifier",
                "name": "player"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "playerBlockNumber",
              "identifier": {
                "type": "Identifier",
                "name": "playerBlockNumber"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "currentBlockNumber",
              "identifier": {
                "type": "Identifier",
                "name": "currentBlockNumber"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            }
          ],
          "isAnonymous": false
        },
        {
          "type": "EventDefinition",
          "name": "LogDividend",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "investor",
              "identifier": {
                "type": "Identifier",
                "name": "investor"
              },
              "isStateVar": false,
              "isIndexed": true,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "amount",
              "identifier": {
                "type": "Identifier",
                "name": "amount"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "period",
              "identifier": {
                "type": "Identifier",
                "name": "period"
              },
              "isStateVar": false,
              "isIndexed": false,
              "storageLocation": null,
              "expression": null
            }
          ],
          "isAnonymous": false
        },
        {
          "type": "ModifierDefinition",
          "name": "onlyOwner",
          "parameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "owner"
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_"
                }
              }
            ]
          },
          "isVirtual": false,
          "override": null
        },
        {
          "type": "ModifierDefinition",
          "name": "onlyAnimator",
          "parameters": [],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "animator"
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "_"
                }
              }
            ]
          },
          "isVirtual": false,
          "override": null
        },
        {
          "type": "FunctionDefinition",
          "name": "SmartBillions",
          "parameters": [],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "owner"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "sender"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "animator"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "sender"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "wallets"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "owner"
                      }
                    },
                    "memberName": "lastDividendPeriod"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "TypeNameExpression",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint16",
                        "stateMutability": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "dividendPeriod"
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "dividends"
                    },
                    "memberName": "push"
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "dividends"
                    },
                    "memberName": "push"
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": true,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "hashesLength",
          "parameters": [],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "TypeNameExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "hashes"
                      },
                      "memberName": "length"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "walletBalanceOf",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_owner",
              "identifier": {
                "type": "Identifier",
                "name": "_owner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "TypeNameExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "wallets"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "_owner"
                        }
                      },
                      "memberName": "balance"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "walletPeriodOf",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_owner",
              "identifier": {
                "type": "Identifier",
                "name": "_owner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "TypeNameExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "wallets"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "_owner"
                        }
                      },
                      "memberName": "lastDividendPeriod"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "walletBlockOf",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_owner",
              "identifier": {
                "type": "Identifier",
                "name": "_owner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "TypeNameExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "wallets"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "_owner"
                        }
                      },
                      "memberName": "nextWithdrawBlock"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "betValueOf",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_owner",
              "identifier": {
                "type": "Identifier",
                "name": "_owner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "TypeNameExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "bets"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "_owner"
                        }
                      },
                      "memberName": "value"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "betHashOf",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_owner",
              "identifier": {
                "type": "Identifier",
                "name": "_owner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "TypeNameExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "bets"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "_owner"
                        }
                      },
                      "memberName": "betHash"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "betBlockNumberOf",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_owner",
              "identifier": {
                "type": "Identifier",
                "name": "_owner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "TypeNameExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "bets"
                        },
                        "index": {
                          "type": "Identifier",
                          "name": "_owner"
                        }
                      },
                      "memberName": "blockNum"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "dividendsBlocks",
          "parameters": [],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "investStart"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "period",
                    "identifier": {
                      "type": "Identifier",
                      "name": "period"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "block"
                          },
                          "memberName": "number"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "hashFirst"
                        }
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                          "type": "NumberLiteral",
                          "number": "10",
                          "subdenomination": null
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "hashesSize"
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "period"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "dividendPeriod"
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "NumberLiteral",
                              "number": "10",
                              "subdenomination": null
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "hashesSize"
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "%",
                            "left": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "-",
                                  "left": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "block"
                                    },
                                    "memberName": "number"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "hashFirst"
                                  }
                                }
                              ],
                              "isArray": false
                            },
                            "right": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "*",
                                  "left": {
                                    "type": "NumberLiteral",
                                    "number": "10",
                                    "subdenomination": null
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "hashesSize"
                                  }
                                }
                              ],
                              "isArray": false
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "isArray": false
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "changeOwner",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_who",
              "identifier": {
                "type": "Identifier",
                "name": "_who"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "_who"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "TypeNameExpression",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "address",
                            "stateMutability": null
                          }
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "commitDividend"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "commitDividend"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_who"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "owner"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_who"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": null
            }
          ],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "changeAnimator",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_who",
              "identifier": {
                "type": "Identifier",
                "name": "_who"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "assert"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "_who"
                      },
                      "right": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "TypeNameExpression",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "address",
                            "stateMutability": null
                          }
                        },
                        "arguments": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "commitDividend"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "commitDividend"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_who"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "animator"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_who"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyAnimator",
              "arguments": null
            }
          ],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setInvestStart",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_when",
              "identifier": {
                "type": "Identifier",
                "name": "_when"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "Identifier",
                            "name": "investStart"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": ">",
                          "left": {
                            "type": "Identifier",
                            "name": "hashFirst"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "block"
                          },
                          "memberName": "number"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "_when"
                        }
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "investStart"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_when"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": null
            }
          ],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "setBetMax",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_maxsum",
              "identifier": {
                "type": "Identifier",
                "name": "_maxsum"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "hashBetMax"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_maxsum"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": null
            }
          ],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "resetBet",
          "parameters": [],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "hashNext"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "block"
                      },
                      "memberName": "number"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "3",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "hashBetSum"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": null
            }
          ],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "coldStore",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_amount",
              "identifier": {
                "type": "Identifier",
                "name": "_amount"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "houseKeeping"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "Identifier",
                          "name": "_amount"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": ">=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "this"
                          },
                          "memberName": "balance"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "/",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "investBalance"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "9",
                                      "subdenomination": null
                                    }
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "10",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "isArray": false
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "walletBalance"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "_amount"
                          }
                        }
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">=",
                  "left": {
                    "type": "Identifier",
                    "name": "investBalance"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                      "type": "Identifier",
                      "name": "investBalanceGot"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                    }
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "BinaryOperation",
                            "operator": "&&",
                            "left": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "<=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "_amount"
                                  },
                                  "right": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "this"
                                      },
                                      "memberName": "balance"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "400",
                                      "subdenomination": null
                                    }
                                  }
                                }
                              ],
                              "isArray": false
                            },
                            "right": {
                              "type": "BinaryOperation",
                              "operator": "<=",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "coldStoreLast"
                                },
                                "right": {
                                  "type": "BinaryOperation",
                                  "operator": "*",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                      "type": "BinaryOperation",
                                      "operator": "*",
                                      "left": {
                                        "type": "NumberLiteral",
                                        "number": "4",
                                        "subdenomination": null
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "60",
                                        "subdenomination": null
                                      }
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "24",
                                      "subdenomination": null
                                    }
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "7",
                                    "subdenomination": null
                                  }
                                }
                              },
                              "right": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "block"
                                },
                                "memberName": "number"
                              }
                            }
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    },
                    "memberName": "transfer"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_amount"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "coldStoreLast"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "block"
                    },
                    "memberName": "number"
                  }
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [
            {
              "type": "ModifierInvocation",
              "name": "onlyOwner",
              "arguments": null
            }
          ],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "hotStore",
          "parameters": [],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "Identifier",
                    "name": "walletBalance"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "value"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "wallets"
                      },
                      "index": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      }
                    },
                    "memberName": "balance"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "TypeNameExpression",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint208",
                        "stateMutability": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "value"
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "houseKeeping"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "houseKeeping",
          "parameters": [],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                      "type": "Identifier",
                      "name": "investStart"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": ">=",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "block"
                      },
                      "memberName": "number"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "Identifier",
                        "name": "investStart"
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "Identifier",
                              "name": "hashesSize"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "5",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "investStart"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                },
                "falseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "Identifier",
                          "name": "hashFirst"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "trueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "VariableDeclarationStatement",
                            "variables": [
                              {
                                "type": "VariableDeclaration",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint",
                                  "stateMutability": null
                                },
                                "name": "period",
                                "identifier": {
                                  "type": "Identifier",
                                  "name": "period"
                                },
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false,
                                "expression": null
                              }
                            ],
                            "initialValue": {
                              "type": "BinaryOperation",
                              "operator": "/",
                              "left": {
                                "type": "TupleExpression",
                                "components": [
                                  {
                                    "type": "BinaryOperation",
                                    "operator": "-",
                                    "left": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "block"
                                      },
                                      "memberName": "number"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "hashFirst"
                                    }
                                  }
                                ],
                                "isArray": false
                              },
                              "right": {
                                "type": "TupleExpression",
                                "components": [
                                  {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                      "type": "NumberLiteral",
                                      "number": "10",
                                      "subdenomination": null
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "hashesSize"
                                    }
                                  }
                                ],
                                "isArray": false
                              }
                            }
                          },
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": ">",
                              "left": {
                                "type": "Identifier",
                                "name": "period"
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "dividends"
                                  },
                                  "memberName": "length"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "2",
                                  "subdenomination": null
                                }
                              }
                            },
                            "trueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "dividends"
                                      },
                                      "memberName": "push"
                                    },
                                    "arguments": [
                                      {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                      }
                                    ],
                                    "names": [],
                                    "identifiers": []
                                  }
                                }
                              ]
                            },
                            "falseBody": null
                          },
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": "&&",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "&&",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": ">",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "period"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "dividendPeriod"
                                  }
                                },
                                "right": {
                                  "type": "BinaryOperation",
                                  "operator": "==",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "investStart"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                  }
                                }
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "<",
                                "left": {
                                  "type": "Identifier",
                                  "name": "dividendPeriod"
                                },
                                "right": {
                                  "type": "BinaryOperation",
                                  "operator": "-",
                                  "left": {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "dividends"
                                    },
                                    "memberName": "length"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                  }
                                }
                              }
                            },
                            "trueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "UnaryOperation",
                                    "operator": "++",
                                    "subExpression": {
                                      "type": "Identifier",
                                      "name": "dividendPeriod"
                                    },
                                    "isPrefix": false
                                  }
                                }
                              ]
                            },
                            "falseBody": null
                          }
                        ]
                      },
                      "falseBody": null
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "payWallet",
          "parameters": [],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "wallets"
                        },
                        "index": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "memberName": "sender"
                        }
                      },
                      "memberName": "balance"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "<=",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "IndexAccess",
                        "base": {
                          "type": "Identifier",
                          "name": "wallets"
                        },
                        "index": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "memberName": "sender"
                        }
                      },
                      "memberName": "nextWithdrawBlock"
                    },
                    "right": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "block"
                      },
                      "memberName": "number"
                    }
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint",
                            "stateMutability": null
                          },
                          "name": "balance",
                          "identifier": {
                            "type": "Identifier",
                            "name": "balance"
                          },
                          "storageLocation": null,
                          "isStateVar": false,
                          "isIndexed": false,
                          "expression": null
                        }
                      ],
                      "initialValue": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "wallets"
                          },
                          "index": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          }
                        },
                        "memberName": "balance"
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "wallets"
                            },
                            "index": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "msg"
                              },
                              "memberName": "sender"
                            }
                          },
                          "memberName": "balance"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "-=",
                        "left": {
                          "type": "Identifier",
                          "name": "walletBalance"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "balance"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "pay"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "balance"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ]
                },
                "falseBody": null
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "pay",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_amount",
              "identifier": {
                "type": "Identifier",
                "name": "_amount"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "maxpay",
                    "identifier": {
                      "type": "Identifier",
                      "name": "maxpay"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "this"
                    },
                    "memberName": "balance"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">=",
                  "left": {
                    "type": "Identifier",
                    "name": "maxpay"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_amount"
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          },
                          "memberName": "transfer"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "_amount"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "Identifier",
                          "name": "_amount"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": "finney"
                        }
                      },
                      "trueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "houseKeeping"
                              },
                              "arguments": [],
                              "names": [],
                              "identifiers": []
                            }
                          }
                        ]
                      },
                      "falseBody": null
                    }
                  ]
                },
                "falseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint",
                            "stateMutability": null
                          },
                          "name": "keepbalance",
                          "identifier": {
                            "type": "Identifier",
                            "name": "keepbalance"
                          },
                          "storageLocation": null,
                          "isStateVar": false,
                          "isIndexed": false,
                          "expression": null
                        }
                      ],
                      "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "_amount"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "maxpay"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "walletBalance"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "keepbalance"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "wallets"
                            },
                            "index": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "msg"
                              },
                              "memberName": "sender"
                            }
                          },
                          "memberName": "balance"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "TypeNameExpression",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint208",
                              "stateMutability": null
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "keepbalance"
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "wallets"
                            },
                            "index": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "msg"
                              },
                              "memberName": "sender"
                            }
                          },
                          "memberName": "nextWithdrawBlock"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "TypeNameExpression",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint32",
                              "stateMutability": null
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "block"
                                },
                                "memberName": "number"
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "*",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                      "type": "NumberLiteral",
                                      "number": "4",
                                      "subdenomination": null
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "60",
                                      "subdenomination": null
                                    }
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "24",
                                    "subdenomination": null
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "30",
                                  "subdenomination": null
                                }
                              }
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          },
                          "memberName": "transfer"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "maxpay"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "private",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "investDirect",
          "parameters": [],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "invest"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "owner"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "invest",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_partner",
              "identifier": {
                "type": "Identifier",
                "name": "_partner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": ">",
                          "left": {
                            "type": "Identifier",
                            "name": "investStart"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "block"
                            },
                            "memberName": "number"
                          },
                          "right": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "investStart"
                            },
                            "right": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "*",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "hashesSize"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "5",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "isArray": false
                            }
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "investBalance"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "investBalanceMax"
                        }
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "investing",
                    "identifier": {
                      "type": "Identifier",
                      "name": "investing"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  "memberName": "value"
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "investing"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                      "type": "Identifier",
                      "name": "investBalanceMax"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "investBalance"
                    }
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "investing"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "Identifier",
                            "name": "investBalanceMax"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "investBalance"
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "investBalance"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "investBalanceMax"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "investBalanceGot"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "investBalanceMax"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "investStart"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          },
                          "memberName": "transfer"
                        },
                        "arguments": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "msg"
                                },
                                "memberName": "value"
                              },
                              "memberName": "sub"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "investing"
                              }
                            ],
                            "names": [],
                            "identifiers": []
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ]
                },
                "falseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "investBalance"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "investing"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "investBalanceGot"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "investing"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "||",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                      "type": "Identifier",
                      "name": "_partner"
                    },
                    "right": {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "TypeNameExpression",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "address",
                          "stateMutability": null
                        }
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      ],
                      "names": [],
                      "identifiers": []
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                      "type": "Identifier",
                      "name": "_partner"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "owner"
                    }
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "walletBalance"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "/",
                          "left": {
                            "type": "Identifier",
                            "name": "investing"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "10",
                            "subdenomination": null
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "wallets"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "owner"
                            }
                          },
                          "memberName": "balance"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "TypeNameExpression",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint208",
                              "stateMutability": null
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryOperation",
                              "operator": "/",
                              "left": {
                                "type": "Identifier",
                                "name": "investing"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                              }
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      }
                    }
                  ]
                },
                "falseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "walletBalance"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "/",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "*",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "investing"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "5",
                                    "subdenomination": null
                                  }
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "100",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "2",
                            "subdenomination": null
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "wallets"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "owner"
                            }
                          },
                          "memberName": "balance"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "TypeNameExpression",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint208",
                              "stateMutability": null
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryOperation",
                              "operator": "/",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "Identifier",
                                  "name": "investing"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "5",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "100",
                                "subdenomination": null
                              }
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "wallets"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "_partner"
                            }
                          },
                          "memberName": "balance"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "TypeNameExpression",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint208",
                              "stateMutability": null
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryOperation",
                              "operator": "/",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "Identifier",
                                  "name": "investing"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "5",
                                  "subdenomination": null
                                }
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "100",
                                "subdenomination": null
                              }
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "wallets"
                      },
                      "index": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      }
                    },
                    "memberName": "lastDividendPeriod"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "TypeNameExpression",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint16",
                        "stateMutability": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "dividendPeriod"
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "senderBalance",
                    "identifier": {
                      "type": "Identifier",
                      "name": "senderBalance"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "Identifier",
                    "name": "investing"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "**",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "10",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "15",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "ownerBalance",
                    "identifier": {
                      "type": "Identifier",
                      "name": "ownerBalance"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "investing"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "16",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "**",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "10",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "17",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "animatorBalance",
                    "identifier": {
                      "type": "Identifier",
                      "name": "animatorBalance"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "investing"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "10",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "**",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "10",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "17",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "balances"
                    },
                    "index": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "senderBalance"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "balances"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "owner"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "ownerBalance"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "balances"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "animator"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "animatorBalance"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "Identifier",
                    "name": "totalSupply"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "Identifier",
                        "name": "senderBalance"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "ownerBalance"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "animatorBalance"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "Transfer"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "TypeNameExpression",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "address",
                          "stateMutability": null
                        }
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      ],
                      "names": [],
                      "identifiers": []
                    },
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    },
                    {
                      "type": "Identifier",
                      "name": "senderBalance"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "Transfer"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "TypeNameExpression",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "address",
                          "stateMutability": null
                        }
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      ],
                      "names": [],
                      "identifiers": []
                    },
                    {
                      "type": "Identifier",
                      "name": "owner"
                    },
                    {
                      "type": "Identifier",
                      "name": "ownerBalance"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "Transfer"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "TypeNameExpression",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "address",
                          "stateMutability": null
                        }
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      ],
                      "names": [],
                      "identifiers": []
                    },
                    {
                      "type": "Identifier",
                      "name": "animator"
                    },
                    {
                      "type": "Identifier",
                      "name": "animatorBalance"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "LogInvestment"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    },
                    {
                      "type": "Identifier",
                      "name": "_partner"
                    },
                    {
                      "type": "Identifier",
                      "name": "investing"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "disinvest",
          "parameters": [],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "investStart"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "commitDividend"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "initialInvestment",
                    "identifier": {
                      "type": "Identifier",
                      "name": "initialInvestment"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "balances"
                    },
                    "index": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "**",
                    "left": {
                      "type": "NumberLiteral",
                      "number": "10",
                      "subdenomination": null
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "15",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "Transfer"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "TypeNameExpression",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "address",
                          "stateMutability": null
                        }
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      ],
                      "names": [],
                      "identifiers": []
                    },
                    {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "balances"
                      },
                      "index": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "UnaryOperation",
                  "operator": "delete",
                  "subExpression": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "balances"
                    },
                    "index": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  },
                  "isPrefix": true
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "-=",
                  "left": {
                    "type": "Identifier",
                    "name": "investBalance"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "initialInvestment"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "wallets"
                      },
                      "index": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      }
                    },
                    "memberName": "balance"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "TypeNameExpression",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint208",
                        "stateMutability": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "BinaryOperation",
                        "operator": "/",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "Identifier",
                            "name": "initialInvestment"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "9",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "10",
                          "subdenomination": null
                        }
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "payWallet"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "payDividends",
          "parameters": [],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                        "type": "Identifier",
                        "name": "investStart"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "commitDividend"
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "payWallet"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "commitDividend",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_who",
              "identifier": {
                "type": "Identifier",
                "name": "_who"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "last",
                    "identifier": {
                      "type": "Identifier",
                      "name": "last"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "wallets"
                    },
                    "index": {
                      "type": "Identifier",
                      "name": "_who"
                    }
                  },
                  "memberName": "lastDividendPeriod"
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "||",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "balances"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "_who"
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "Identifier",
                          "name": "last"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    ],
                    "isArray": false
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "wallets"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "_who"
                            }
                          },
                          "memberName": "lastDividendPeriod"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "TypeNameExpression",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint16",
                              "stateMutability": null
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "dividendPeriod"
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "expression": null
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "last"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "dividendPeriod"
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": null
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "share",
                    "identifier": {
                      "type": "Identifier",
                      "name": "share"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "balances"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "_who"
                      }
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0xffffffff",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "totalSupply"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "balance",
                    "identifier": {
                      "type": "Identifier",
                      "name": "balance"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "ForStatement",
                "initExpression": null,
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "last"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "dividendPeriod"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "last"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "balance"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "Identifier",
                            "name": "share"
                          },
                          "right": {
                            "type": "IndexAccess",
                            "base": {
                              "type": "Identifier",
                              "name": "dividends"
                            },
                            "index": {
                              "type": "Identifier",
                              "name": "last"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "balance"
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "/",
                        "left": {
                          "type": "Identifier",
                          "name": "balance"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0xffffffff",
                          "subdenomination": null
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "Identifier",
                    "name": "walletBalance"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "balance"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "wallets"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "_who"
                      }
                    },
                    "memberName": "balance"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "TypeNameExpression",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint208",
                        "stateMutability": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "balance"
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "wallets"
                      },
                      "index": {
                        "type": "Identifier",
                        "name": "_who"
                      }
                    },
                    "memberName": "lastDividendPeriod"
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "TypeNameExpression",
                      "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint16",
                        "stateMutability": null
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "last"
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "LogDividend"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_who"
                    },
                    {
                      "type": "Identifier",
                      "name": "balance"
                    },
                    {
                      "type": "Identifier",
                      "name": "last"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "internal",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "betPrize",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Bet"
              },
              "name": "_player",
              "identifier": {
                "type": "Identifier",
                "name": "_player"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint24",
                "stateMutability": null
              },
              "name": "_hash",
              "identifier": {
                "type": "Identifier",
                "name": "_hash"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint24",
                      "stateMutability": null
                    },
                    "name": "bethash",
                    "identifier": {
                      "type": "Identifier",
                      "name": "bethash"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "TypeNameExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint24",
                      "stateMutability": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "_player"
                      },
                      "memberName": "betHash"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint24",
                      "stateMutability": null
                    },
                    "name": "hit",
                    "identifier": {
                      "type": "Identifier",
                      "name": "hit"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "^",
                  "left": {
                    "type": "Identifier",
                    "name": "bethash"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_hash"
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint24",
                      "stateMutability": null
                    },
                    "name": "matches",
                    "identifier": {
                      "type": "Identifier",
                      "name": "matches"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "Conditional",
                                "condition": {
                                  "type": "BinaryOperation",
                                  "operator": "==",
                                  "left": {
                                    "type": "TupleExpression",
                                    "components": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "&",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "hit"
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "0xF",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "isArray": false
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                  }
                                },
                                "trueExpression": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                },
                                "falseExpression": {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "Conditional",
                                "condition": {
                                  "type": "BinaryOperation",
                                  "operator": "==",
                                  "left": {
                                    "type": "TupleExpression",
                                    "components": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "&",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "hit"
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "0xF0",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "isArray": false
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                  }
                                },
                                "trueExpression": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                },
                                "falseExpression": {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          }
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "Conditional",
                              "condition": {
                                "type": "BinaryOperation",
                                "operator": "==",
                                "left": {
                                  "type": "TupleExpression",
                                  "components": [
                                    {
                                      "type": "BinaryOperation",
                                      "operator": "&",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "hit"
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "0xF00",
                                        "subdenomination": null
                                      }
                                    }
                                  ],
                                  "isArray": false
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                }
                              },
                              "trueExpression": {
                                "type": "NumberLiteral",
                                "number": "1",
                                "subdenomination": null
                              },
                              "falseExpression": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        }
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "Conditional",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": "==",
                              "left": {
                                "type": "TupleExpression",
                                "components": [
                                  {
                                    "type": "BinaryOperation",
                                    "operator": "&",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "hit"
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "0xF000",
                                      "subdenomination": null
                                    }
                                  }
                                ],
                                "isArray": false
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                              }
                            },
                            "trueExpression": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            },
                            "falseExpression": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    },
                    "right": {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "Conditional",
                          "condition": {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "&",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "hit"
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "0xF0000",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "isArray": false
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          },
                          "trueExpression": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                          },
                          "falseExpression": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        }
                      ],
                      "isArray": false
                    }
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "Conditional",
                        "condition": {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "&",
                                "left": {
                                  "type": "Identifier",
                                  "name": "hit"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "0xF00000",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        },
                        "trueExpression": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        },
                        "falseExpression": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    ],
                    "isArray": false
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "matches"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "6",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "TypeNameExpression",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint",
                                  "stateMutability": null
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "_player"
                                  },
                                  "memberName": "value"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "7000000",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "matches"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "5",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "TypeNameExpression",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint",
                                  "stateMutability": null
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "_player"
                                  },
                                  "memberName": "value"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "20000",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "matches"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "4",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "TypeNameExpression",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint",
                                  "stateMutability": null
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "_player"
                                  },
                                  "memberName": "value"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "500",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "matches"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "3",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "TypeNameExpression",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint",
                                  "stateMutability": null
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "_player"
                                  },
                                  "memberName": "value"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "25",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "matches"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "2",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "*",
                            "left": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "TypeNameExpression",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint",
                                  "stateMutability": null
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "_player"
                                  },
                                  "memberName": "value"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "3",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "isArray": false
                }
              }
            ]
          },
          "visibility": "private",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "betOf",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_who",
              "identifier": {
                "type": "Identifier",
                "name": "_who"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Bet"
                    },
                    "name": "player",
                    "identifier": {
                      "type": "Identifier",
                      "name": "player"
                    },
                    "storageLocation": "memory",
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "bets"
                  },
                  "index": {
                    "type": "Identifier",
                    "name": "_who"
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "||",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "||",
                    "left": {
                      "type": "BinaryOperation",
                      "operator": "||",
                      "left": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "==",
                            "left": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "player"
                              },
                              "memberName": "value"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "<=",
                            "left": {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "player"
                              },
                              "memberName": "blockNum"
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    },
                    "right": {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "block"
                            },
                            "memberName": "number"
                          },
                          "right": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "player"
                            },
                            "memberName": "blockNum"
                          }
                        }
                      ],
                      "isArray": false
                    }
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": ">=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "block"
                          },
                          "memberName": "number"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "player"
                            },
                            "memberName": "blockNum"
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                  "type": "NumberLiteral",
                                  "number": "10",
                                  "subdenomination": null
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "hashesSize"
                                }
                              }
                            ],
                            "isArray": false
                          }
                        }
                      }
                    ],
                    "isArray": false
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "block"
                    },
                    "memberName": "number"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "player"
                      },
                      "memberName": "blockNum"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "256",
                      "subdenomination": null
                    }
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "Identifier",
                              "name": "betPrize"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "player"
                              },
                              {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "TypeNameExpression",
                                  "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint24",
                                    "stateMutability": null
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "block"
                                      },
                                      "memberName": "blockhash"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "player"
                                        },
                                        "memberName": "blockNum"
                                      }
                                    ],
                                    "names": [],
                                    "identifiers": []
                                  }
                                ],
                                "names": [],
                                "identifiers": []
                              }
                            ],
                            "names": [],
                            "identifiers": []
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "hashFirst"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint32",
                            "stateMutability": null
                          },
                          "name": "hash",
                          "identifier": {
                            "type": "Identifier",
                            "name": "hash"
                          },
                          "storageLocation": null,
                          "isStateVar": false,
                          "isIndexed": false,
                          "expression": null
                        }
                      ],
                      "initialValue": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "getHash"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "player"
                            },
                            "memberName": "blockNum"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "Identifier",
                          "name": "hash"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0x1000000",
                          "subdenomination": null
                        }
                      },
                      "trueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ReturnStatement",
                            "expression": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "TypeNameExpression",
                                    "typeName": {
                                      "type": "ElementaryTypeName",
                                      "name": "uint",
                                      "stateMutability": null
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "player"
                                      },
                                      "memberName": "value"
                                    }
                                  ],
                                  "names": [],
                                  "identifiers": []
                                }
                              ],
                              "isArray": false
                            }
                          }
                        ]
                      },
                      "falseBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ReturnStatement",
                            "expression": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "FunctionCall",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "betPrize"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "player"
                                    },
                                    {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "TypeNameExpression",
                                        "typeName": {
                                          "type": "ElementaryTypeName",
                                          "name": "uint24",
                                          "stateMutability": null
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "hash"
                                        }
                                      ],
                                      "names": [],
                                      "identifiers": []
                                    }
                                  ],
                                  "names": [],
                                  "identifiers": []
                                }
                              ],
                              "isArray": false
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  ],
                  "isArray": false
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "won",
          "parameters": [],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "Bet"
                    },
                    "name": "player",
                    "identifier": {
                      "type": "Identifier",
                      "name": "player"
                    },
                    "storageLocation": "memory",
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "bets"
                  },
                  "index": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "sender"
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "player"
                    },
                    "memberName": "blockNum"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "bets"
                          },
                          "index": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "Bet"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            },
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            },
                            {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          ],
                          "names": [
                            "value",
                            "betHash",
                            "blockNum"
                          ],
                          "identifiers": [
                            {
                              "type": "Identifier",
                              "name": "value"
                            },
                            {
                              "type": "Identifier",
                              "name": "betHash"
                            },
                            {
                              "type": "Identifier",
                              "name": "blockNum"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "expression": null
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "||",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "player"
                          },
                          "memberName": "value"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "player"
                          },
                          "memberName": "blockNum"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      }
                    ],
                    "isArray": false
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "payWallet"
                        },
                        "arguments": [],
                        "names": [],
                        "identifiers": []
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "expression": null
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "block"
                        },
                        "memberName": "number"
                      },
                      "right": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "player"
                        },
                        "memberName": "blockNum"
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<=",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "player"
                      },
                      "memberName": "blockNum"
                    },
                    "right": {
                      "type": "TupleExpression",
                      "components": [
                        {
                          "type": "BinaryOperation",
                          "operator": "*",
                          "left": {
                            "type": "NumberLiteral",
                            "number": "10",
                            "subdenomination": null
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "hashesSize"
                          }
                        }
                      ],
                      "isArray": false
                    }
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "block"
                    },
                    "memberName": "number"
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "LogLate"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "player"
                            },
                            "memberName": "blockNum"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "block"
                            },
                            "memberName": "number"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "bets"
                          },
                          "index": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "Bet"
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            },
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            },
                            {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                            }
                          ],
                          "names": [
                            "value",
                            "betHash",
                            "blockNum"
                          ],
                          "identifiers": [
                            {
                              "type": "Identifier",
                              "name": "value"
                            },
                            {
                              "type": "Identifier",
                              "name": "betHash"
                            },
                            {
                              "type": "Identifier",
                              "name": "blockNum"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "expression": null
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "prize",
                    "identifier": {
                      "type": "Identifier",
                      "name": "prize"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint32",
                      "stateMutability": null
                    },
                    "name": "hash",
                    "identifier": {
                      "type": "Identifier",
                      "name": "hash"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "block"
                    },
                    "memberName": "number"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "player"
                      },
                      "memberName": "blockNum"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "256",
                      "subdenomination": null
                    }
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "hash"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "TypeNameExpression",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "uint24",
                              "stateMutability": null
                            }
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "block"
                                },
                                "memberName": "blockhash"
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "player"
                                  },
                                  "memberName": "blockNum"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "prize"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "betPrize"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "player"
                            },
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "TypeNameExpression",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint24",
                                  "stateMutability": null
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "hash"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      }
                    }
                  ]
                },
                "falseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "Identifier",
                          "name": "hashFirst"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "trueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "hash"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "getHash"
                                },
                                "arguments": [
                                  {
                                    "type": "MemberAccess",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "player"
                                    },
                                    "memberName": "blockNum"
                                  }
                                ],
                                "names": [],
                                "identifiers": []
                              }
                            }
                          },
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": "==",
                              "left": {
                                "type": "Identifier",
                                "name": "hash"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "0x1000000",
                                "subdenomination": null
                              }
                            },
                            "trueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "Identifier",
                                      "name": "LogLate"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "msg"
                                        },
                                        "memberName": "sender"
                                      },
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "player"
                                        },
                                        "memberName": "blockNum"
                                      },
                                      {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "block"
                                        },
                                        "memberName": "number"
                                      }
                                    ],
                                    "names": [],
                                    "identifiers": []
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "IndexAccess",
                                      "base": {
                                        "type": "Identifier",
                                        "name": "bets"
                                      },
                                      "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                          "type": "Identifier",
                                          "name": "msg"
                                        },
                                        "memberName": "sender"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "Bet"
                                      },
                                      "arguments": [
                                        {
                                          "type": "NumberLiteral",
                                          "number": "0",
                                          "subdenomination": null
                                        },
                                        {
                                          "type": "NumberLiteral",
                                          "number": "0",
                                          "subdenomination": null
                                        },
                                        {
                                          "type": "NumberLiteral",
                                          "number": "1",
                                          "subdenomination": null
                                        }
                                      ],
                                      "names": [
                                        "value",
                                        "betHash",
                                        "blockNum"
                                      ],
                                      "identifiers": [
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "betHash"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "blockNum"
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "ReturnStatement",
                                  "expression": {
                                    "type": "TupleExpression",
                                    "components": [],
                                    "isArray": false
                                  }
                                }
                              ]
                            },
                            "falseBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "prize"
                                    },
                                    "right": {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "betPrize"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "player"
                                        },
                                        {
                                          "type": "FunctionCall",
                                          "expression": {
                                            "type": "TypeNameExpression",
                                            "typeName": {
                                              "type": "ElementaryTypeName",
                                              "name": "uint24",
                                              "stateMutability": null
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "hash"
                                            }
                                          ],
                                          "names": [],
                                          "identifiers": []
                                        }
                                      ],
                                      "names": [],
                                      "identifiers": []
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "falseBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "LogLate"
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "msg"
                                  },
                                  "memberName": "sender"
                                },
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "player"
                                  },
                                  "memberName": "blockNum"
                                },
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "block"
                                  },
                                  "memberName": "number"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "bets"
                                },
                                "index": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "msg"
                                  },
                                  "memberName": "sender"
                                }
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "Bet"
                                },
                                "arguments": [
                                  {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                  },
                                  {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                  },
                                  {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                  }
                                ],
                                "names": [
                                  "value",
                                  "betHash",
                                  "blockNum"
                                ],
                                "identifiers": [
                                  {
                                    "type": "Identifier",
                                    "name": "value"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "betHash"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "blockNum"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "expression": {
                              "type": "TupleExpression",
                              "components": [],
                              "isArray": false
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "bets"
                    },
                    "index": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "memberName": "sender"
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "Bet"
                    },
                    "arguments": [
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                      },
                      {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                      }
                    ],
                    "names": [
                      "value",
                      "betHash",
                      "blockNum"
                    ],
                    "identifiers": [
                      {
                        "type": "Identifier",
                        "name": "value"
                      },
                      {
                        "type": "Identifier",
                        "name": "betHash"
                      },
                      {
                        "type": "Identifier",
                        "name": "blockNum"
                      }
                    ]
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "Identifier",
                    "name": "prize"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "LogWin"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "TypeNameExpression",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint",
                                "stateMutability": null
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "player"
                                },
                                "memberName": "betHash"
                              }
                            ],
                            "names": [],
                            "identifiers": []
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "TypeNameExpression",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint",
                                "stateMutability": null
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "hash"
                              }
                            ],
                            "names": [],
                            "identifiers": []
                          },
                          {
                            "type": "Identifier",
                            "name": "prize"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "Identifier",
                          "name": "prize"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "maxWin"
                        }
                      },
                      "trueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "maxWin"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "prize"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "LogRecordWin"
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "msg"
                                  },
                                  "memberName": "sender"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "prize"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            }
                          }
                        ]
                      },
                      "falseBody": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "pay"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "prize"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ]
                },
                "falseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "LogLoss"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "TypeNameExpression",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint",
                                "stateMutability": null
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "player"
                                },
                                "memberName": "betHash"
                              }
                            ],
                            "names": [],
                            "identifiers": []
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "TypeNameExpression",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint",
                                "stateMutability": null
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "hash"
                              }
                            ],
                            "names": [],
                            "identifiers": []
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "",
          "parameters": [],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "value"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                          "type": "Identifier",
                          "name": "investStart"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                        }
                      },
                      "trueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "invest"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "owner"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            }
                          }
                        ]
                      },
                      "falseBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "Identifier",
                                "name": "play"
                              },
                              "arguments": [],
                              "names": [],
                              "identifiers": []
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "expression": null
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                      "type": "Identifier",
                      "name": "investStart"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                      "type": "IndexAccess",
                      "base": {
                        "type": "Identifier",
                        "name": "balances"
                      },
                      "index": {
                        "type": "MemberAccess",
                        "expression": {
                          "type": "Identifier",
                          "name": "msg"
                        },
                        "memberName": "sender"
                      }
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "commitDividend"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "won"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": true,
          "isVirtual": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "play",
          "parameters": [],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "playSystem"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "TypeNameExpression",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint",
                          "stateMutability": null
                        }
                      },
                      "arguments": [
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "keccak256"
                          },
                          "arguments": [
                            {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "msg"
                              },
                              "memberName": "sender"
                            },
                            {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "block"
                              },
                              "memberName": "number"
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      ],
                      "names": [],
                      "identifiers": []
                    },
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "TypeNameExpression",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "address",
                          "stateMutability": null
                        }
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      ],
                      "names": [],
                      "identifiers": []
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "playRandom",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_partner",
              "identifier": {
                "type": "Identifier",
                "name": "_partner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "playSystem"
                  },
                  "arguments": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "TypeNameExpression",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint",
                          "stateMutability": null
                        }
                      },
                      "arguments": [
                        {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "keccak256"
                          },
                          "arguments": [
                            {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "msg"
                              },
                              "memberName": "sender"
                            },
                            {
                              "type": "MemberAccess",
                              "expression": {
                                "type": "Identifier",
                                "name": "block"
                              },
                              "memberName": "number"
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      ],
                      "names": [],
                      "identifiers": []
                    },
                    {
                      "type": "Identifier",
                      "name": "_partner"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "playSystem",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_hash",
              "identifier": {
                "type": "Identifier",
                "name": "_hash"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
              },
              "name": "_partner",
              "identifier": {
                "type": "Identifier",
                "name": "_partner"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "won"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint24",
                      "stateMutability": null
                    },
                    "name": "bethash",
                    "identifier": {
                      "type": "Identifier",
                      "name": "bethash"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "TypeNameExpression",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint24",
                      "stateMutability": null
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "_hash"
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "<=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "memberName": "value"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": "ether"
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "memberName": "value"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "hashBetMax"
                        }
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "msg"
                    },
                    "memberName": "value"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                          "type": "Identifier",
                          "name": "investStart"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      },
                      "trueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "+=",
                              "left": {
                                "type": "IndexAccess",
                                "base": {
                                  "type": "Identifier",
                                  "name": "dividends"
                                },
                                "index": {
                                  "type": "Identifier",
                                  "name": "dividendPeriod"
                                }
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "/",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "msg"
                                  },
                                  "memberName": "value"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "20",
                                  "subdenomination": null
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBody": null
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "!=",
                        "left": {
                          "type": "Identifier",
                          "name": "_partner"
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "TypeNameExpression",
                            "typeName": {
                              "type": "ElementaryTypeName",
                              "name": "address",
                              "stateMutability": null
                            }
                          },
                          "arguments": [
                            {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                            }
                          ],
                          "names": [],
                          "identifiers": []
                        }
                      },
                      "trueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "VariableDeclarationStatement",
                            "variables": [
                              {
                                "type": "VariableDeclaration",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint",
                                  "stateMutability": null
                                },
                                "name": "fee",
                                "identifier": {
                                  "type": "Identifier",
                                  "name": "fee"
                                },
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false,
                                "expression": null
                              }
                            ],
                            "initialValue": {
                              "type": "BinaryOperation",
                              "operator": "/",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "msg"
                                },
                                "memberName": "value"
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "100",
                                "subdenomination": null
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "+=",
                              "left": {
                                "type": "Identifier",
                                "name": "walletBalance"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "fee"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "+=",
                              "left": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "IndexAccess",
                                  "base": {
                                    "type": "Identifier",
                                    "name": "wallets"
                                  },
                                  "index": {
                                    "type": "Identifier",
                                    "name": "_partner"
                                  }
                                },
                                "memberName": "balance"
                              },
                              "right": {
                                "type": "FunctionCall",
                                "expression": {
                                  "type": "TypeNameExpression",
                                  "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint208",
                                    "stateMutability": null
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "fee"
                                  }
                                ],
                                "names": [],
                                "identifiers": []
                              }
                            }
                          }
                        ]
                      },
                      "falseBody": null
                    },
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "hashNext"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "block"
                            },
                            "memberName": "number"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "3",
                            "subdenomination": null
                          }
                        }
                      },
                      "trueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "hashNext"
                              },
                              "right": {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "block"
                                  },
                                  "memberName": "number"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "3",
                                  "subdenomination": null
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "hashBetSum"
                              },
                              "right": {
                                "type": "MemberAccess",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "msg"
                                },
                                "memberName": "value"
                              }
                            }
                          }
                        ]
                      },
                      "falseBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "IfStatement",
                            "condition": {
                              "type": "BinaryOperation",
                              "operator": ">",
                              "left": {
                                "type": "Identifier",
                                "name": "hashBetSum"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "hashBetMax"
                              }
                            },
                            "trueBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "UnaryOperation",
                                    "operator": "++",
                                    "subExpression": {
                                      "type": "Identifier",
                                      "name": "hashNext"
                                    },
                                    "isPrefix": false
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "hashBetSum"
                                    },
                                    "right": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "msg"
                                      },
                                      "memberName": "value"
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBody": {
                              "type": "Block",
                              "statements": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "hashBetSum"
                                    },
                                    "right": {
                                      "type": "MemberAccess",
                                      "expression": {
                                        "type": "Identifier",
                                        "name": "msg"
                                      },
                                      "memberName": "value"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "bets"
                          },
                          "index": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          }
                        },
                        "right": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "Bet"
                          },
                          "arguments": [
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "TypeNameExpression",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint192",
                                  "stateMutability": null
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "msg"
                                  },
                                  "memberName": "value"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            },
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "TypeNameExpression",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint32",
                                  "stateMutability": null
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "bethash"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            },
                            {
                              "type": "FunctionCall",
                              "expression": {
                                "type": "TypeNameExpression",
                                "typeName": {
                                  "type": "ElementaryTypeName",
                                  "name": "uint32",
                                  "stateMutability": null
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "hashNext"
                                }
                              ],
                              "names": [],
                              "identifiers": []
                            }
                          ],
                          "names": [
                            "value",
                            "betHash",
                            "blockNum"
                          ],
                          "identifiers": [
                            {
                              "type": "Identifier",
                              "name": "value"
                            },
                            {
                              "type": "Identifier",
                              "name": "betHash"
                            },
                            {
                              "type": "Identifier",
                              "name": "blockNum"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "Identifier",
                          "name": "LogBet"
                        },
                        "arguments": [
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "sender"
                          },
                          {
                            "type": "FunctionCall",
                            "expression": {
                              "type": "TypeNameExpression",
                              "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint",
                                "stateMutability": null
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "bethash"
                              }
                            ],
                            "names": [],
                            "identifiers": []
                          },
                          {
                            "type": "Identifier",
                            "name": "hashNext"
                          },
                          {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "memberName": "value"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "putHashes"
                  },
                  "arguments": [
                    {
                      "type": "NumberLiteral",
                      "number": "25",
                      "subdenomination": null
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "Identifier",
                      "name": "hashNext"
                    }
                  ],
                  "isArray": false
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "payable"
        },
        {
          "type": "FunctionDefinition",
          "name": "addHashes",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_sadd",
              "identifier": {
                "type": "Identifier",
                "name": "_sadd"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "FunctionCall",
                  "expression": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "arguments": [
                    {
                      "type": "BinaryOperation",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "&&",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "==",
                          "left": {
                            "type": "Identifier",
                            "name": "hashFirst"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": ">",
                          "left": {
                            "type": "Identifier",
                            "name": "_sadd"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryOperation",
                        "operator": "<=",
                        "left": {
                          "type": "Identifier",
                          "name": "_sadd"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "hashesSize"
                        }
                      }
                    }
                  ],
                  "names": [],
                  "identifiers": []
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "n",
                    "identifier": {
                      "type": "Identifier",
                      "name": "n"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "MemberAccess",
                  "expression": {
                    "type": "Identifier",
                    "name": "hashes"
                  },
                  "memberName": "length"
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "n"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "_sadd"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "hashesSize"
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "hashes"
                          },
                          "memberName": "length"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "hashesSize"
                        }
                      }
                    }
                  ]
                },
                "falseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "MemberAccess",
                          "expression": {
                            "type": "Identifier",
                            "name": "hashes"
                          },
                          "memberName": "length"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "_sadd"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ForStatement",
                "initExpression": null,
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "n"
                  },
                  "right": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "hashes"
                    },
                    "memberName": "length"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "n"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "IndexAccess",
                          "base": {
                            "type": "Identifier",
                            "name": "hashes"
                          },
                          "index": {
                            "type": "Identifier",
                            "name": "n"
                          }
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": ">=",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "hashes"
                    },
                    "memberName": "length"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "hashesSize"
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "hashFirst"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "block"
                            },
                            "memberName": "number"
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "%",
                                "left": {
                                  "type": "MemberAccess",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "block"
                                  },
                                  "memberName": "number"
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "10",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "hashLast"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "hashFirst"
                        }
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "hashes"
                      },
                      "memberName": "length"
                    }
                  ],
                  "isArray": false
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "addHashes128",
          "parameters": [],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "Identifier",
                        "name": "addHashes"
                      },
                      "arguments": [
                        {
                          "type": "NumberLiteral",
                          "number": "128",
                          "subdenomination": null
                        }
                      ],
                      "names": [],
                      "identifiers": []
                    }
                  ],
                  "isArray": false
                }
              }
            ]
          },
          "visibility": "external",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "calcHashes",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint32",
                "stateMutability": null
              },
              "name": "_lastb",
              "identifier": {
                "type": "Identifier",
                "name": "_lastb"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            },
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint32",
                "stateMutability": null
              },
              "name": "_delta",
              "identifier": {
                "type": "Identifier",
                "name": "_delta"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BinaryOperation",
                      "operator": "|",
                      "left": {
                        "type": "BinaryOperation",
                        "operator": "|",
                        "left": {
                          "type": "BinaryOperation",
                          "operator": "|",
                          "left": {
                            "type": "BinaryOperation",
                            "operator": "|",
                            "left": {
                              "type": "BinaryOperation",
                              "operator": "|",
                              "left": {
                                "type": "BinaryOperation",
                                "operator": "|",
                                "left": {
                                  "type": "BinaryOperation",
                                  "operator": "|",
                                  "left": {
                                    "type": "BinaryOperation",
                                    "operator": "|",
                                    "left": {
                                      "type": "BinaryOperation",
                                      "operator": "|",
                                      "left": {
                                        "type": "BinaryOperation",
                                        "operator": "|",
                                        "left": {
                                          "type": "TupleExpression",
                                          "components": [
                                            {
                                              "type": "BinaryOperation",
                                              "operator": "&",
                                              "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                  "type": "TypeNameExpression",
                                                  "typeName": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "uint",
                                                    "stateMutability": null
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                      "type": "MemberAccess",
                                                      "expression": {
                                                        "type": "Identifier",
                                                        "name": "block"
                                                      },
                                                      "memberName": "blockhash"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "_lastb"
                                                      }
                                                    ],
                                                    "names": [],
                                                    "identifiers": []
                                                  }
                                                ],
                                                "names": [],
                                                "identifiers": []
                                              },
                                              "right": {
                                                "type": "NumberLiteral",
                                                "number": "0xFFFFFF",
                                                "subdenomination": null
                                              }
                                            }
                                          ],
                                          "isArray": false
                                        },
                                        "right": {
                                          "type": "TupleExpression",
                                          "components": [
                                            {
                                              "type": "BinaryOperation",
                                              "operator": "<<",
                                              "left": {
                                                "type": "TupleExpression",
                                                "components": [
                                                  {
                                                    "type": "BinaryOperation",
                                                    "operator": "&",
                                                    "left": {
                                                      "type": "FunctionCall",
                                                      "expression": {
                                                        "type": "TypeNameExpression",
                                                        "typeName": {
                                                          "type": "ElementaryTypeName",
                                                          "name": "uint",
                                                          "stateMutability": null
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "FunctionCall",
                                                          "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                              "type": "Identifier",
                                                              "name": "block"
                                                            },
                                                            "memberName": "blockhash"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "BinaryOperation",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "_lastb"
                                                              },
                                                              "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "1",
                                                                "subdenomination": null
                                                              }
                                                            }
                                                          ],
                                                          "names": [],
                                                          "identifiers": []
                                                        }
                                                      ],
                                                      "names": [],
                                                      "identifiers": []
                                                    },
                                                    "right": {
                                                      "type": "NumberLiteral",
                                                      "number": "0xFFFFFF",
                                                      "subdenomination": null
                                                    }
                                                  }
                                                ],
                                                "isArray": false
                                              },
                                              "right": {
                                                "type": "NumberLiteral",
                                                "number": "24",
                                                "subdenomination": null
                                              }
                                            }
                                          ],
                                          "isArray": false
                                        }
                                      },
                                      "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "<<",
                                            "left": {
                                              "type": "TupleExpression",
                                              "components": [
                                                {
                                                  "type": "BinaryOperation",
                                                  "operator": "&",
                                                  "left": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                      "type": "TypeNameExpression",
                                                      "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint",
                                                        "stateMutability": null
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                          "type": "MemberAccess",
                                                          "expression": {
                                                            "type": "Identifier",
                                                            "name": "block"
                                                          },
                                                          "memberName": "blockhash"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "_lastb"
                                                            },
                                                            "right": {
                                                              "type": "NumberLiteral",
                                                              "number": "2",
                                                              "subdenomination": null
                                                            }
                                                          }
                                                        ],
                                                        "names": [],
                                                        "identifiers": []
                                                      }
                                                    ],
                                                    "names": [],
                                                    "identifiers": []
                                                  },
                                                  "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0xFFFFFF",
                                                    "subdenomination": null
                                                  }
                                                }
                                              ],
                                              "isArray": false
                                            },
                                            "right": {
                                              "type": "NumberLiteral",
                                              "number": "48",
                                              "subdenomination": null
                                            }
                                          }
                                        ],
                                        "isArray": false
                                      }
                                    },
                                    "right": {
                                      "type": "TupleExpression",
                                      "components": [
                                        {
                                          "type": "BinaryOperation",
                                          "operator": "<<",
                                          "left": {
                                            "type": "TupleExpression",
                                            "components": [
                                              {
                                                "type": "BinaryOperation",
                                                "operator": "&",
                                                "left": {
                                                  "type": "FunctionCall",
                                                  "expression": {
                                                    "type": "TypeNameExpression",
                                                    "typeName": {
                                                      "type": "ElementaryTypeName",
                                                      "name": "uint",
                                                      "stateMutability": null
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "FunctionCall",
                                                      "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                          "type": "Identifier",
                                                          "name": "block"
                                                        },
                                                        "memberName": "blockhash"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "BinaryOperation",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "_lastb"
                                                          },
                                                          "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "3",
                                                            "subdenomination": null
                                                          }
                                                        }
                                                      ],
                                                      "names": [],
                                                      "identifiers": []
                                                    }
                                                  ],
                                                  "names": [],
                                                  "identifiers": []
                                                },
                                                "right": {
                                                  "type": "NumberLiteral",
                                                  "number": "0xFFFFFF",
                                                  "subdenomination": null
                                                }
                                              }
                                            ],
                                            "isArray": false
                                          },
                                          "right": {
                                            "type": "NumberLiteral",
                                            "number": "72",
                                            "subdenomination": null
                                          }
                                        }
                                      ],
                                      "isArray": false
                                    }
                                  },
                                  "right": {
                                    "type": "TupleExpression",
                                    "components": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "<<",
                                        "left": {
                                          "type": "TupleExpression",
                                          "components": [
                                            {
                                              "type": "BinaryOperation",
                                              "operator": "&",
                                              "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                  "type": "TypeNameExpression",
                                                  "typeName": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "uint",
                                                    "stateMutability": null
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                      "type": "MemberAccess",
                                                      "expression": {
                                                        "type": "Identifier",
                                                        "name": "block"
                                                      },
                                                      "memberName": "blockhash"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "_lastb"
                                                        },
                                                        "right": {
                                                          "type": "NumberLiteral",
                                                          "number": "4",
                                                          "subdenomination": null
                                                        }
                                                      }
                                                    ],
                                                    "names": [],
                                                    "identifiers": []
                                                  }
                                                ],
                                                "names": [],
                                                "identifiers": []
                                              },
                                              "right": {
                                                "type": "NumberLiteral",
                                                "number": "0xFFFFFF",
                                                "subdenomination": null
                                              }
                                            }
                                          ],
                                          "isArray": false
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "96",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "isArray": false
                                  }
                                },
                                "right": {
                                  "type": "TupleExpression",
                                  "components": [
                                    {
                                      "type": "BinaryOperation",
                                      "operator": "<<",
                                      "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                          {
                                            "type": "BinaryOperation",
                                            "operator": "&",
                                            "left": {
                                              "type": "FunctionCall",
                                              "expression": {
                                                "type": "TypeNameExpression",
                                                "typeName": {
                                                  "type": "ElementaryTypeName",
                                                  "name": "uint",
                                                  "stateMutability": null
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionCall",
                                                  "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                      "type": "Identifier",
                                                      "name": "block"
                                                    },
                                                    "memberName": "blockhash"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "BinaryOperation",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "_lastb"
                                                      },
                                                      "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "5",
                                                        "subdenomination": null
                                                      }
                                                    }
                                                  ],
                                                  "names": [],
                                                  "identifiers": []
                                                }
                                              ],
                                              "names": [],
                                              "identifiers": []
                                            },
                                            "right": {
                                              "type": "NumberLiteral",
                                              "number": "0xFFFFFF",
                                              "subdenomination": null
                                            }
                                          }
                                        ],
                                        "isArray": false
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "120",
                                        "subdenomination": null
                                      }
                                    }
                                  ],
                                  "isArray": false
                                }
                              },
                              "right": {
                                "type": "TupleExpression",
                                "components": [
                                  {
                                    "type": "BinaryOperation",
                                    "operator": "<<",
                                    "left": {
                                      "type": "TupleExpression",
                                      "components": [
                                        {
                                          "type": "BinaryOperation",
                                          "operator": "&",
                                          "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                              "type": "TypeNameExpression",
                                              "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint",
                                                "stateMutability": null
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "FunctionCall",
                                                "expression": {
                                                  "type": "MemberAccess",
                                                  "expression": {
                                                    "type": "Identifier",
                                                    "name": "block"
                                                  },
                                                  "memberName": "blockhash"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryOperation",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "_lastb"
                                                    },
                                                    "right": {
                                                      "type": "NumberLiteral",
                                                      "number": "6",
                                                      "subdenomination": null
                                                    }
                                                  }
                                                ],
                                                "names": [],
                                                "identifiers": []
                                              }
                                            ],
                                            "names": [],
                                            "identifiers": []
                                          },
                                          "right": {
                                            "type": "NumberLiteral",
                                            "number": "0xFFFFFF",
                                            "subdenomination": null
                                          }
                                        }
                                      ],
                                      "isArray": false
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "144",
                                      "subdenomination": null
                                    }
                                  }
                                ],
                                "isArray": false
                              }
                            },
                            "right": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "<<",
                                  "left": {
                                    "type": "TupleExpression",
                                    "components": [
                                      {
                                        "type": "BinaryOperation",
                                        "operator": "&",
                                        "left": {
                                          "type": "FunctionCall",
                                          "expression": {
                                            "type": "TypeNameExpression",
                                            "typeName": {
                                              "type": "ElementaryTypeName",
                                              "name": "uint",
                                              "stateMutability": null
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionCall",
                                              "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                  "type": "Identifier",
                                                  "name": "block"
                                                },
                                                "memberName": "blockhash"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryOperation",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "_lastb"
                                                  },
                                                  "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "7",
                                                    "subdenomination": null
                                                  }
                                                }
                                              ],
                                              "names": [],
                                              "identifiers": []
                                            }
                                          ],
                                          "names": [],
                                          "identifiers": []
                                        },
                                        "right": {
                                          "type": "NumberLiteral",
                                          "number": "0xFFFFFF",
                                          "subdenomination": null
                                        }
                                      }
                                    ],
                                    "isArray": false
                                  },
                                  "right": {
                                    "type": "NumberLiteral",
                                    "number": "168",
                                    "subdenomination": null
                                  }
                                }
                              ],
                              "isArray": false
                            }
                          },
                          "right": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": "<<",
                                "left": {
                                  "type": "TupleExpression",
                                  "components": [
                                    {
                                      "type": "BinaryOperation",
                                      "operator": "&",
                                      "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                          "type": "TypeNameExpression",
                                          "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint",
                                            "stateMutability": null
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "FunctionCall",
                                            "expression": {
                                              "type": "MemberAccess",
                                              "expression": {
                                                "type": "Identifier",
                                                "name": "block"
                                              },
                                              "memberName": "blockhash"
                                            },
                                            "arguments": [
                                              {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_lastb"
                                                },
                                                "right": {
                                                  "type": "NumberLiteral",
                                                  "number": "8",
                                                  "subdenomination": null
                                                }
                                              }
                                            ],
                                            "names": [],
                                            "identifiers": []
                                          }
                                        ],
                                        "names": [],
                                        "identifiers": []
                                      },
                                      "right": {
                                        "type": "NumberLiteral",
                                        "number": "0xFFFFFF",
                                        "subdenomination": null
                                      }
                                    }
                                  ],
                                  "isArray": false
                                },
                                "right": {
                                  "type": "NumberLiteral",
                                  "number": "192",
                                  "subdenomination": null
                                }
                              }
                            ],
                            "isArray": false
                          }
                        },
                        "right": {
                          "type": "TupleExpression",
                          "components": [
                            {
                              "type": "BinaryOperation",
                              "operator": "<<",
                              "left": {
                                "type": "TupleExpression",
                                "components": [
                                  {
                                    "type": "BinaryOperation",
                                    "operator": "&",
                                    "left": {
                                      "type": "FunctionCall",
                                      "expression": {
                                        "type": "TypeNameExpression",
                                        "typeName": {
                                          "type": "ElementaryTypeName",
                                          "name": "uint",
                                          "stateMutability": null
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "FunctionCall",
                                          "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                              "type": "Identifier",
                                              "name": "block"
                                            },
                                            "memberName": "blockhash"
                                          },
                                          "arguments": [
                                            {
                                              "type": "BinaryOperation",
                                              "operator": "+",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "_lastb"
                                              },
                                              "right": {
                                                "type": "NumberLiteral",
                                                "number": "9",
                                                "subdenomination": null
                                              }
                                            }
                                          ],
                                          "names": [],
                                          "identifiers": []
                                        }
                                      ],
                                      "names": [],
                                      "identifiers": []
                                    },
                                    "right": {
                                      "type": "NumberLiteral",
                                      "number": "0xFFFFFF",
                                      "subdenomination": null
                                    }
                                  }
                                ],
                                "isArray": false
                              },
                              "right": {
                                "type": "NumberLiteral",
                                "number": "216",
                                "subdenomination": null
                              }
                            }
                          ],
                          "isArray": false
                        }
                      },
                      "right": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BinaryOperation",
                            "operator": "<<",
                            "left": {
                              "type": "TupleExpression",
                              "components": [
                                {
                                  "type": "BinaryOperation",
                                  "operator": "/",
                                  "left": {
                                    "type": "FunctionCall",
                                    "expression": {
                                      "type": "TypeNameExpression",
                                      "typeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint",
                                        "stateMutability": null
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "_delta"
                                      }
                                    ],
                                    "names": [],
                                    "identifiers": []
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "hashesSize"
                                  }
                                }
                              ],
                              "isArray": false
                            },
                            "right": {
                              "type": "NumberLiteral",
                              "number": "240",
                              "subdenomination": null
                            }
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ],
                  "isArray": false
                }
              }
            ]
          },
          "visibility": "private",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "getHash",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_block",
              "identifier": {
                "type": "Identifier",
                "name": "_block"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint32",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "delta",
                    "identifier": {
                      "type": "Identifier",
                      "name": "delta"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "_block"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "hashFirst"
                        }
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "10",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "hash",
                    "identifier": {
                      "type": "Identifier",
                      "name": "hash"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "IndexAccess",
                  "base": {
                    "type": "Identifier",
                    "name": "hashes"
                  },
                  "index": {
                    "type": "BinaryOperation",
                    "operator": "%",
                    "left": {
                      "type": "Identifier",
                      "name": "delta"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "hashesSize"
                    }
                  }
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                      "type": "Identifier",
                      "name": "delta"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "hashesSize"
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": ">>",
                    "left": {
                      "type": "Identifier",
                      "name": "hash"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "240",
                      "subdenomination": null
                    }
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "NumberLiteral",
                            "number": "0x1000000",
                            "subdenomination": null
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "slotp",
                    "identifier": {
                      "type": "Identifier",
                      "name": "slotp"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "%",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "_block"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "hashFirst"
                        }
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "10",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "FunctionCall",
                      "expression": {
                        "type": "TypeNameExpression",
                        "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint32",
                          "stateMutability": null
                        }
                      },
                      "arguments": [
                        {
                          "type": "BinaryOperation",
                          "operator": "&",
                          "left": {
                            "type": "TupleExpression",
                            "components": [
                              {
                                "type": "BinaryOperation",
                                "operator": ">>",
                                "left": {
                                  "type": "Identifier",
                                  "name": "hash"
                                },
                                "right": {
                                  "type": "TupleExpression",
                                  "components": [
                                    {
                                      "type": "BinaryOperation",
                                      "operator": "*",
                                      "left": {
                                        "type": "NumberLiteral",
                                        "number": "24",
                                        "subdenomination": null
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "slotp"
                                      }
                                    }
                                  ],
                                  "isArray": false
                                }
                              }
                            ],
                            "isArray": false
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "0xFFFFFF",
                            "subdenomination": null
                          }
                        }
                      ],
                      "names": [],
                      "identifiers": []
                    }
                  ],
                  "isArray": false
                }
              }
            ]
          },
          "visibility": "private",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": "constant"
        },
        {
          "type": "FunctionDefinition",
          "name": "putHash",
          "parameters": [],
          "returnParameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
              },
              "name": null,
              "identifier": null,
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "lastb",
                    "identifier": {
                      "type": "Identifier",
                      "name": "lastb"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "Identifier",
                  "name": "hashLast"
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "||",
                  "left": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                      "type": "Identifier",
                      "name": "lastb"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                    }
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "<=",
                    "left": {
                      "type": "MemberAccess",
                      "expression": {
                        "type": "Identifier",
                        "name": "block"
                      },
                      "memberName": "number"
                    },
                    "right": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                        "type": "Identifier",
                        "name": "lastb"
                      },
                      "right": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                      }
                    }
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "expression": {
                        "type": "TupleExpression",
                        "components": [
                          {
                            "type": "BooleanLiteral",
                            "value": false
                          }
                        ],
                        "isArray": false
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "blockn256",
                    "identifier": {
                      "type": "Identifier",
                      "name": "blockn256"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": null
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "MemberAccess",
                    "expression": {
                      "type": "Identifier",
                      "name": "block"
                    },
                    "memberName": "number"
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "256",
                    "subdenomination": null
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "blockn256"
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                        }
                      }
                    }
                  ]
                },
                "falseBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "blockn256"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                            "type": "MemberAccess",
                            "expression": {
                              "type": "Identifier",
                              "name": "block"
                            },
                            "memberName": "number"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "255",
                            "subdenomination": null
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "lastb"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "blockn256"
                  }
                },
                "trueBody": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                        {
                          "type": "VariableDeclaration",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint",
                            "stateMutability": null
                          },
                          "name": "num",
                          "identifier": {
                            "type": "Identifier",
                            "name": "num"
                          },
                          "storageLocation": null,
                          "isStateVar": false,
                          "isIndexed": false,
                          "expression": null
                        }
                      ],
                      "initialValue": {
                        "type": "Identifier",
                        "name": "blockn256"
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "num"
                        },
                        "right": {
                          "type": "BinaryOperation",
                          "operator": "%",
                          "left": {
                            "type": "Identifier",
                            "name": "num"
                          },
                          "right": {
                            "type": "NumberLiteral",
                            "number": "10",
                            "subdenomination": null
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "lastb"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "num"
                        }
                      }
                    }
                  ]
                },
                "falseBody": null
              },
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "delta",
                    "identifier": {
                      "type": "Identifier",
                      "name": "delta"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                    "type": "TupleExpression",
                    "components": [
                      {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "lastb"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "hashFirst"
                        }
                      }
                    ],
                    "isArray": false
                  },
                  "right": {
                    "type": "NumberLiteral",
                    "number": "10",
                    "subdenomination": null
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "IndexAccess",
                    "base": {
                      "type": "Identifier",
                      "name": "hashes"
                    },
                    "index": {
                      "type": "BinaryOperation",
                      "operator": "%",
                      "left": {
                        "type": "Identifier",
                        "name": "delta"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "hashesSize"
                      }
                    }
                  },
                  "right": {
                    "type": "FunctionCall",
                    "expression": {
                      "type": "Identifier",
                      "name": "calcHashes"
                    },
                    "arguments": [
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "TypeNameExpression",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint32",
                            "stateMutability": null
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "lastb"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      },
                      {
                        "type": "FunctionCall",
                        "expression": {
                          "type": "TypeNameExpression",
                          "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint32",
                            "stateMutability": null
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "delta"
                          }
                        ],
                        "names": [],
                        "identifiers": []
                      }
                    ],
                    "names": [],
                    "identifiers": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "hashLast"
                  },
                  "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "name": "lastb"
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "number": "10",
                      "subdenomination": null
                    }
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "expression": {
                  "type": "TupleExpression",
                  "components": [
                    {
                      "type": "BooleanLiteral",
                      "value": true
                    }
                  ],
                  "isArray": false
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        },
        {
          "type": "FunctionDefinition",
          "name": "putHashes",
          "parameters": [
            {
              "type": "VariableDeclaration",
              "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint",
                "stateMutability": null
              },
              "name": "_num",
              "identifier": {
                "type": "Identifier",
                "name": "_num"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
            }
          ],
          "returnParameters": null,
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "VariableDeclarationStatement",
                "variables": [
                  {
                    "type": "VariableDeclaration",
                    "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint",
                      "stateMutability": null
                    },
                    "name": "n",
                    "identifier": {
                      "type": "Identifier",
                      "name": "n"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                  }
                ],
                "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                }
              },
              {
                "type": "ForStatement",
                "initExpression": null,
                "conditionExpression": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "n"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "_num"
                  }
                },
                "loopExpression": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                      "type": "Identifier",
                      "name": "n"
                    },
                    "isPrefix": false
                  }
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "IfStatement",
                      "condition": {
                        "type": "UnaryOperation",
                        "operator": "!",
                        "subExpression": {
                          "type": "FunctionCall",
                          "expression": {
                            "type": "Identifier",
                            "name": "putHash"
                          },
                          "arguments": [],
                          "names": [],
                          "identifiers": []
                        },
                        "isPrefix": true
                      },
                      "trueBody": {
                        "type": "Block",
                        "statements": [
                          {
                            "type": "ReturnStatement",
                            "expression": null
                          }
                        ]
                      },
                      "falseBody": null
                    }
                  ]
                }
              }
            ]
          },
          "visibility": "public",
          "modifiers": [],
          "override": null,
          "isConstructor": false,
          "isReceiveEther": false,
          "isFallback": false,
          "isVirtual": false,
          "stateMutability": null
        }
      ],
      "kind": "contract"
    }
  ]
}